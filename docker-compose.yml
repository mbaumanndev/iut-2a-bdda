version: '3.4'

services:
  reverse-proxy:
    image: traefik:v2.5
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $PWD/traefik/traefik.toml:/etc/traefik/traefik.toml
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`vm-iut`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.api.service=api@internal"
    networks:
      - web

  mssql:
    restart: 'no'
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - 1433:1433
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Amiens2020!
    volumes:
      - sqldata:/var/opt/mssql
    labels:
      - "net.maxime-baumann.iut"
      - "traefik.enable=true"
      - "traefik.http.routers.mssql.rule=Host(`vm-iut-mssql`)"
      - "traefik.http.services.mssql.loadbalancer.server.port=1433"
    networks:
      - web

  sqlcmd:
    restart: 'no'
    image: mcr.microsoft.com/mssql/server:2019-latest
    depends_on:
      - mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Amiens2020!
    command: >
      sh -c '/opt/mssql-tools/bin/sqlcmd -S mssql -U sa -P Amiens2020!'
    labels:
      - "net.maxime-baumann.iut"
    networks:
      - web

  redis:
    restart: 'no'
    image: redislabs/redisearch:2.4.0
    command: --loglevel verbose
    ports:
      - 6379:6379
    volumes:
      - redisdata:/data
    labels:
      - "net.maxime-baumann.iut"
      - "traefik.enable=true"
      - "traefik.http.routers.redis.rule=Host(`vm-iut-redis`)"
      - "traefik.http.services.redis.loadbalancer.server.port=6379"
    networks:
      - web

  rcli:
    restart: 'no'
    image: redislabs/redisearch:2.4.0
    depends_on:
      - redis
    command: >
      sh -c 'redis-cli -h redis '
    labels:
      - "net.maxime-baumann.iut"
    networks:
      - web

  readis:
    restart: 'no'
    image: hollodotme/readis
    ports:
      - 8080:80
    volumes:
      - ./config:/code/config:ro
    depends_on:
      - redis
    labels:
      - "net.maxime-baumann.iut"
      - "traefik.enable=true"
      - "traefik.http.routers.readis.rule=Host(`vm-iut`) && PathPrefix(`/readis`)"
      - "traefik.http.routers.readis.middlewares=strip-readis"
      - "traefik.http.middlewares.strip-readis.stripprefix.prefixes=/readis"
      - "traefik.http.services.readis.loadbalancer.server.port=8080"
    networks:
      - web

  phpredisadmin:
    restart: 'no'
    image: erikdubbelboer/phpredisadmin
    environment:
      - REDIS_1_HOST=redis
      - REDIS_1_PORT=6379
    depends_on:
      - redis
    ports:
      - 8081:80
    labels:
      - "net.maxime-baumann.iut"
      - "traefik.enable=true"
      - "traefik.http.routers.phpredisadmin.rule=Host(`vm-iut`) && PathPrefix(`/phpredisadmin`)"
      - "traefik.http.routers.phpredisadmin.middlewares=strip-phpredisadmin"
      - "traefik.http.middlewares.strip-phpredisadmin.stripprefix.prefixes=/phpredisadmin"
      - "traefik.http.services.phpredisadmin.loadbalancer.server.port=8081"
    networks:
      - web

  mongo:
    restart: 'no'
    image: mongo:4.4.11
    command: --serviceExecutor adaptive
    volumes:
      - mongodata:/data/db
    ports:
      - 27017:27017
    labels:
      - "net.maxime-baumann.iut"
      - "traefik.enable=true"
      - "traefik.http.routers.mongo.rule=Host(`vm-iut-mongo`)"
      - "traefik.http.services.mongo.loadbalancer.server.port=27017"
    networks:
      - web

  mgcli:
    restart: 'no'
    image: mongo:4.4.11
    depends_on:
      - mongo
    command: >
      sh -c 'mongo --host mongo '
    labels:
      - "net.maxime-baumann.iut"
    networks:
      - web

  mongo-express:
    restart: 'no'
    image: mongo-express:0.54.0
    ports:
      - 8082:8081
    depends_on:
      - mongo
    labels:
      - "net.maxime-baumann.iut"
      - "traefik.enable=true"
      - "traefik.http.routers.mongo-express.rule=Host(`vm-iut`) && PathPrefix(`/mongo-express`)"
      - "traefik.http.routers.mongo-express.middlewares=strip-mongo-express"
      - "traefik.http.middlewares.strip-mongo-express.stripprefix.prefixes=/mongo-express"
      - "traefik.http.services.mongo-express.loadbalancer.server.port=8082"
    networks:
      - web

  neo4j:
    restart: 'no'
    image: neo4j:4.1.4
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      - NEO4J_AUTH=none
    volumes:
      - neodata:/data
    labels:
      - "net.maxime-baumann.iut"
      - "traefik.enable=true"
      - "traefik.http.routers.neo4j.rule=Host(`vm-iut`) && PathPrefix(`/neo4j`)"
      - "traefik.http.routers.neo4j.middlewares=strip-neo4j"
      - "traefik.http.middlewares.strip-neo4j.stripprefix.prefixes=/neo4j"
      - "traefik.http.services.neo4j.loadbalancer.server.port=7474"
    networks:
      - web

  pg:
    restart: 'no'
    image: postgres:14.1-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=Amiens2020!
    volumes:
      - pgdata:/var/lib/postgresql/data
    labels:
      - "net.maxime-baumann.iut"
      - "traefik.enable=true"
      - "traefik.http.routers.pg.rule=Host(`vm-iut-pg`)"
      - "traefik.http.services.pg.loadbalancer.server.port=5432"
    networks:
      - web

  pgcli:
    restart: 'no'
    image: postgres:14.1-alpine
    depends_on:
      - pg
    command: >
      sh -c 'psql -h pg -U postgres'
    labels:
      - "net.maxime-baumann.iut"
    networks:
      - web

  adminer:
    restart: 'no'
    image: adminer:4.8.1-standalone
    ports:
      - 8083:8080
    labels:
      - "net.maxime-baumann.iut"
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`vm-iut`) && PathPrefix(`/adminer`)"
      - "traefik.http.routers.adminer.middlewares=strip-adminer"
      - "traefik.http.middlewares.strip-adminer.stripprefix.prefixes=/adminer"
      - "traefik.http.services.adminer.loadbalancer.server.port=8083"
    networks:
      - web

volumes:
  redisdata:
    labels:
      - "net.maxime-baumann.iut"
  sqldata:
    labels:
      - "net.maxime-baumann.iut"
  mongodata:
    labels:
      - "net.maxime-baumann.iut"
  neodata:
    labels:
      - "net.maxime-baumann.iut"
  pgdata:
    labels:
      - "net.maxime-baumann.iut"

networks:
  web:
